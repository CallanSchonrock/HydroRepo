MACRO-DESCRIPTION
RORB 6. Macro Script version 2
--------------------------------------
Exports a CatchmentSIM Project to RORB 6. Test with RORB version 6.00. Update from v3 script to use flowpath length based on centroid of subcatchment rather than total length divided by 2.

Automatically creates a graphical catchment file and background image for a RORB Project (*.catg). 

Update to incorporate modified reach length calculations.  

After importing the *.catg file into the 'RORB Graphical Vector Editor' (to open the 'Graphical Vector Editor' select 'GE' on the RORBWin toolbar), select 'View >> Enlarge Vector' and then 'View >> Shrink Vector' to display the complete RORB project in the default RORB coordinate system. Then re-save the RORB *.catg file to preserve the RORB coordinate system before further processing. 

Please note that georeferencing of background images is not supported in RORB.  Therefore, the background image may not align perfectly with the node/reach arrangment in RORB. The location of nodes can be adjusted by hand if required using the 'Select and move a node or reach' button on the 'RORB Graphical Vector Editor' toolbar.

RORB can be downloaded free of charge from the following website:
http://civil.eng.monash.edu.au/expertise/water/rorb
END-MACRO-DESCRIPTION

START-SCRIPT

{Check to see if there is more than 1 catchment outlet. If so cancel macro}
AssignVariable(&NoOutlets,0)
LOOP(i|1|%Catchment.NumberOfSubCatchments|
  IF(%SubCatchment[i].CatchmentOutlet|=|"TRUE"|
    AssignVariable(&NoOutlets,&NoOutlets+1)
  )
)

IF(&NoOutlets|>|1|
  MessageBox("More than one catchment outlet identified. Only one catchment outlet allowed","Macro Error")  
)
IF(&NoOutlets|<|1|
  MessageBox("No catchment outlet identified. Catchment must have an outlet","Macro Error")  
)

IF(&NoOutlets|=|1|
SaveDialogBox(&RORBFile,"RORB Graphical Catchment File (*.catg)",".catg","")

StartPrintToFile(&RORBFile,ASCII,WINDOWS,OVERWRITE)

InputBox(&Project_Description,"Please enter a title for this project","Project Description",%Project.Title)
TXT(&Project_Description);
TXT("C RORB_GE 6.32");
TXT("C WARNING - DO NOT EDIT THIS FILE OUTSIDE RORB TO ENSURE BOTH GRAPHICAL AND CATCHMENT DATA ARE COMPATIBLE WITH EACH OTHER");
TXT("C THIS FILE CANNOT BE OPENED IN EARLIER VERSIONS OF RORB GE - CURRENT VERSION IS v6.32");
TXT("C ");
TXT("C ")
TXT(&Project_Description);
TXT("C");
TXT("C #FILE COMMENTS");
TXT("C   0");
TXT("C ");
TXT("C #SUB-AREA AREA COMMENTS");
TXT("C   0");
TXT("C ");
TXT("C #IMPERVIOUS FRACTION COMMENTS");
TXT("C   0");
TXT("C ");

{It is recommended to convert to lat/long as RORB GE seems to struggle with large numbers in coordinates}
YesNoBox(&ConvertCoords,"Would you like to convert coordinates to lat/long (if your project is in a supported project)?","Lat / Long")

{Give user option to export background image. Does not support georeferencing of background images}
YesNoBox(&B_Image,"Would you like to export a background graphic","Background Image")
IF(&B_Image|=|True|
  ChangeExtension(&ImageFile,%Project.PathAndFileName,".wmf")  
  ExportBackgroundPictureWMF(&ImageFile)
  TXT("C #BACKGROUND IMAGE");
  TXT("C  T  T")
  FTXT(L,8,1,0,&ImageFile);
)
IF(&B_Image|=|False|
  TXT("C #BACKGROUND IMAGE");
  TXT("C  T  F");
)

TXT("C");
TXT("C #NODES");

{user to select which subcatchments to output hydrograph}
SetArrayLength(&HydrographExport,0)
SetArrayLength(&JnAdded,%Catchment.NumberOfJunctions)
SetArrayLength(&JnNo,%Catchment.NumberOfJunctions)
SetArrayLength(&JnNodeNo,%Catchment.NumberOfJunctions)
SetArrayLength(&SubCatchNodeNo,%Catchment.NumberOfSubCatchments)
SetArrayLength(&SubCatchNo,%Catchment.NumberOfSubCatchments)
SetupCheckListBox("Select print locations (default all junctions and flow through subs)","Hydrograph Output")
LOOP(i|1|%Catchment.NumberOfSubCatchments|
  {RORB print statements are subcatchment inflows so not much point inserting them for subs without upstream inputs}  
  IF (%SubCatchment[i].ThroughFlowSubCatchment|=|True|AddCheckListBoxItem(%SubCatchment[i].Name,TRUE))
  IF (%SubCatchment[i].ThroughFlowSubCatchment|=|False|AddCheckListBoxItem(%SubCatchment[i].Name,FALSE))
)
LOOP(i|1|%Catchment.NumberOfJunctions|
  Combine(&Junc_Name,"J-",[i])
  AddCheckListBoxItem(&Junc_Name,TRUE)
)
DisplayCheckListBox(&HydrographExport)

AssignVariable(&NodeNumber,0)
TXT("C")
FTXT(R,8,1,0,%Catchment.NumberOfSubCatchments+%Catchment.NumberOfJunctions);

GetArrayLength(&ArrayLength,&HydrographExport)

{Nodes Section}
SetArrayLength(&SubName,%Catchment.NumberOfSubCatchments)
SetArrayLength(&SubNodeNumber,%Catchment.NumberOfSubCatchments)
SetArrayLength(&JunctName,%Catchment.NumberOfJunctions)
SetArrayLength(&SubJunctNumber,%Catchment.NumberOfJunctions)
SetArrayLength(&JnAdded,%Catchment.NumberOfJunctions)
SetArrayLength(&UpNode,%Catchment.NumberOfSubCatchments+%Catchment.NumberOfJunctions)
SetArrayLength(&DownNode,%Catchment.NumberOfSubCatchments+%Catchment.NumberOfJunctions)
SetArrayLength(&ReachLength,%Catchment.NumberOfSubCatchments+%Catchment.NumberOfJunctions)
SetArrayLength(&ReachSlope,%Catchment.NumberOfSubCatchments+%Catchment.NumberOfJunctions)
SetArrayLength(&ReachEast,%Catchment.NumberOfSubCatchments+%Catchment.NumberOfJunctions)
SetArrayLength(&ReachNorth,%Catchment.NumberOfSubCatchments+%Catchment.NumberOfJunctions)

LOOP(i|1|%Catchment.NumberOfSubCatchments|
  AssignVariable(&NodeNumber,&NodeNumber+1)
  AssignVariable(&SubNodeNumber[i],&NodeNumber)
  AssignVariable(&SubName[i],[i])
)

LOOP(i|1|%Catchment.NumberOfJunctions|
  AssignVariable(&NodeNumber,&NodeNumber+1)
  AssignVariable(&SubJunctNumber[i],&NodeNumber)
  AssignVariable(&JunctName[i],[i])  
  AssignVariable(&JnAdded[i],"False")
)

AssignVariable(&NodeNumber,0)
AssignVariable(&NumReaches,0)

SetupProgressBar("Extracting Subcatchment Data",%Catchment.NumberOfSubCatchments)
{Loop through all subcatchments and add as nodes}
LOOP(i|1|%Catchment.NumberOfSubCatchments|
  AssignVariable(&Included,"False")
  AssignVariable(&NodeNumber,&NodeNumber+1)
  TXT("C")
  FTXT(R,8,1,0,&NodeNumber) 

  IF(&ConvertCoords|=|True|
    ConvertToLatLong(&Long,&Lat,%Subcatchment[i].CentroidEasting,%Subcatchment[i].CentroidNorthing) 
    FTXT(R,23,1,3,&Long)
    FTXT(R,38,1,3,&Lat)
  )
  IF(&ConvertCoords|=|False|
    FTXT(R,23,1,0,%Subcatchment[i].CentroidEasting)
    FTXT(R,38,1,0,%Subcatchment[i].CentroidNorthing)
  )

  AssignVariable(&SubCatchNodeNo[i],&NodeNumber)
  FTXT(R,53,1,0,"1.000")
  FTXT(R,57,1,0,"1 0")
  AssignVariable(&DownJunct,%SubCatchment[i].DownstreamJunctionNumber)
  LOOP(j|1|%Catchment.NumberOfJunctions|
    IF(&JunctName[j]|=|&DownJunct|
      AssignVariable(&NumReaches,&NumReaches+1)
      FTXT(R,63,1,0,&SubJunctNumber[j])
      AssignVariable(&UpNode[&NumReaches],&NodeNumber)
      AssignVariable(&DownNode[&NumReaches],&SubJunctNumber[j])
      AssignVariable(&ReachLength[&NumReaches],%SubCatchment[i].BelowCentroidStreamLength)
      AssignVariable(&ReachSlope[&NumReaches],%Subcatchment[i].BelowCentroidStreamSlope)
      IF(&ReachSlope[&NumReaches]|<|0|
        	 AssignVariable(&ReachSlope[&NumReaches],0.001)
          )
      AssignVariable(&Easting,%Subcatchment[i].CentroidEasting+%Junction[j].Easting)
      AssignVariable(&Northing,%Subcatchment[i].CentroidNorthing+%Junction[j].Northing)
      AssignVariable(&ReachEast[&NumReaches],&Easting/2)
      AssignVariable(&ReachNorth[&NumReaches],&Northing/2)
    )
  )
  FTXT(L,64,1,0,%Subcatchment[i].Name)
  FTXT(R,99,0.000001,3,%Subcatchment[i].Area)
  FTXT(R,114,1,3,%Subcatchment[i].ImperviousProportion)
  LOOP(j|1|&ArrayLength|
    IF(&HydrographExport[j]|=|%SubCatchment[i].Name|
      FTXT(R,117,1,0,"70")
      AssignVariable(&Included,"True")
      FTXT(L,119,1,0,"0")
      FTXT(L,122,1,0,"0");
      TXT("C")
      Combine(&NodeString,"Inflow ",%SubCatchment[i].Name)
      FTXT(L,3,1,0,&NodeString);
    )
  )
  IF(&Included|=|"False"|
   FTXT(R,117,1,0,"0")
   FTXT(L,119,1,0,"0")
   FTXT(L,122,1,0,"0");
   TXT("C");
  )

UpdateProgressBar()
) {i|1|%Catchment.NumberOfSubCatchments|}
CloseProgressBar()

{Loop through all junctions and add as nodes}
SetupProgressBar("Extracting Junction Data",%Catchment.NumberOfJunctions)
LOOP(i|1|%Catchment.NumberOfJunctions|
  UpdateProgressBar()
  Combine(&Junc_Name,"J-",[i])
  AssignVariable(&Included,"False")
  AssignVariable(&NodeNumber,&NodeNumber+1)
  TXT("C")
  FTXT(R,8,1,0,&NodeNumber)

  IF(&ConvertCoords|=|True|
    ConvertToLatLong(&Long,&Lat,%Junction[i].Easting,%Junction[i].Northing) 
    FTXT(R,23,1,3,&Long)
    FTXT(R,38,1,3,&Lat)
  )
  IF(&ConvertCoords|=|False|
    FTXT(R,23,1,0,%Junction[i].Easting)
    FTXT(R,38,1,0,%Junction[i].Northing)
  )


  AssignVariable(&JnNodeNo[i],&NodeNumber)
  FTXT(R,53,1,0,"1.000")
  AssignVariable(&if_test,%Junction[i].UpstreamSubCatchment[1])
  IF(%SubCatchment[&if_test].CatchmentOutlet|=|False|
    FTXT(R,57,1,0,"0 0")   
    AssignVariable(&DownSub,%Junction[i].DownstreamSubCatchment)
    LOOP(j|1|%Catchment.NumberOfSubCatchments|
      IF(&SubName[j]|=|&DownSub|
        FTXT(R,63,1,0,&SubNodeNumber[j])
        AssignVariable(&NumReaches,&NumReaches+1)
        AssignVariable(&UpNode[&NumReaches],&NodeNumber)
        AssignVariable(&DownNode[&NumReaches],&SubNodeNumber[j])
        AssignVariable(&ReachLength[&NumReaches],%Subcatchment[&DownSub].AboveCentroidStreamLength)
        AssignVariable(&ReachSlope[&NumReaches],%Subcatchment[&DownSub].AboveCentroidStreamSlope)
        IF(&ReachSlope[&NumReaches]|<|0|
        	 AssignVariable(&ReachSlope[&NumReaches],0.001)
          )
        AssignVariable(&Easting,%Subcatchment[j].CentroidEasting+%Junction[i].Easting)
        AssignVariable(&Northing,%Subcatchment[j].CentroidNorthing+%Junction[i].Northing)
        AssignVariable(&ReachEast[&NumReaches],&Easting/2)
        AssignVariable(&ReachNorth[&NumReaches],&Northing/2)
      )
    )
  )
  IF(%SubCatchment[&if_test].CatchmentOutlet|=|True|
    FTXT(R,57,1,0,"0 1")
    FTXT(R,63,1,0,"0")
  )
  Combine(&Junc_Name,"J-",[i])
  FTXT(L,64,1,0,&Junc_Name)
  FTXT(R,99,1,3,"0.000")
  FTXT(R,114,1,3,"0.000")
  LOOP(j|1|&ArrayLength|
    IF(&HydrographExport[j]|=|&Junc_Name|
      FTXT(R,117,1,0,"70")
      AssignVariable(&Included,"True")
    )
  )
  IF(&Included|=|"False"|
   FTXT(R,117,1,0,"0")
  )
FTXT(L,119,1,0,"0")
FTXT(L,122,1,0,"0");
TXT("C Inflow ")
TXT(&Junc_Name);
)  {i|1|%Catchment.NumberOfJunctions|}
CloseProgressBar()

TXT("C");

{Reaches Section}
{Allow user to select most suitable reach description}
SetupRadioGroup("Channel/Reach Description","Reach Des.")
AddRadioButton("1. Natural",True)
AddRadioButton("2. Excavated but unlined",False)
AddRadioButton("3. Lined channel or pipe",False)
AddRadioButton("4. Drowned",False)
DisplayRadioGroup(&ReachType)
TXT("C #REACHES");

TXT("C")
FTXT(R,8,1,0,&NumReaches);

SetupProgressBar("Extracting Reach Data",&NumReaches)
LOOP(i|1|&NumReaches|
  TXT("C")
  FTXT(R,8,1,0,[i])
  Combine(&Reach_Name,"R",[i])  
  FTXT(L,9,1,0,&Reach_Name) 
  FTXT(R,35,1,0,&UpNode[i])
  FTXT(R,41,1,0,&DownNode[i]) 
  IF(&ReachType|=|"1. Natural"| 
    FTXT(L,55,1,0,"0 1 0") 
  )
  IF(&ReachType|=|"2. Excavated but unlined"| 
    FTXT(L,55,1,0,"0 2 0") 
  )
  IF(&ReachType|=|"3. Lined channel or pipe"| 
    FTXT(L,55,1,0,"0 3 0") 
  )
  IF(&ReachType|=|"4. Drowned"| 
    FTXT(L,55,1,0,"0 4 0") 
  )
  FTXT(R,75,0.001,3,&ReachLength[i])
  FTXT(R,90,100,3,&ReachSlope[i]) 
  FTXT(L,95,1,0,"1  0");
  TXT("C")

  IF(&ConvertCoords|=|True|
    ConvertToLatLong(&Long,&Lat,&ReachEast[i],&ReachNorth[i]) 
    FTXT(R,17,1,3,&Long);
    TXT("C")
    FTXT(R,17,1,3,&Lat);  
  )
  IF(&ConvertCoords|=|False|
    FTXT(R,17,1,0,&ReachEast[i]);
    TXT("C")
    FTXT(R,17,1,0,&ReachNorth[i]);  
  )

 
UpdateProgressBar() 
)
CloseProgressBar()
 
TXT("C");
TXT("C #STORAGES");
TXT("C      0");
TXT("C");
TXT("C #INFLOW/OUTFLOW");
TXT("C      0");
TXT("C");
TXT("C END RORB_GE");

EndPrintToFile(&RORBFile)

MessageBox("RORB File Created. Please load and save this with RORB GE before using with RORB or Storm Injector","Macro Complete")
)
END-SCRIPT
